hello
install.packages("slidify")
install.packages(c("ggplot", "devtools"))
utils:::menuInstallPkgs()
source("http://bioconductor.org/biocLite.R")
biocLite()
biolite(c("GenomicFeatures", "AnnotationDBi")
biolite(c("GenomicFeatures", "AnnotationDBi"))
biolite(c("GenomicFeatures", "AnnotationDBi"))
bioclite(c("GenomicFeatures", "AnnotationDBi"))
biocLite(c("GenomicFeatures", "AnnotationDBi"))
library(ggplot2)
search()
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth R")
utils:::menuInstallPkgs()
library(KernSmooth)
getwd()
q()
?read.table
library(knitr)
q()
library(KernSmooth)
q()
q()
q()
q()
install.packages("radiant", repos = "http://vnijs.github.io/radiant_miniCRAN/", type = 'binary')
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
install.packages("Deducer",,"http://rforge.net/")
install.packages("Deducer",,"http://rforge.net/")
install.packages(c("JGR","Deducer","DeducerExtras"))
library(JGR)
JGR()
library(JGR)
JGR()
setwd("~/GitHub/Coursera_Machine_Learning")
# Prediction with Decision Trees
set.seed(12345)
modFitA1 <- rpart(classe ~ ., data=myTraining, method="class")
fancyRpartPlot(modFitA1)
library(caret)
library(rpart)
library(rpart.plot)
library(RColorBrewer)
library(rattle)
library(randomForest)
library(knitr)
library(randomForest)
